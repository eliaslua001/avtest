<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AstraVerse: Scrollable Solar System</title>
    <style>
      .landing-content {
        position: absolute;
        top: 50%;
        left: 60%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: white;
        z-index: 2;
      }

      .glass-btn {
        background-color: rgba(255, 255, 255, 0.3);
        /* Set initial background color with some transparency */
        transition: background-color 0.3s ease;
        /* Add a transition effect for smoother change */
        border: 0px solid #009688;
        /* Green border */
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 25px;
        font-size: 16px;
        color: white;
        position: relative;
        overflow: hidden;
      }

      .glass-btn:before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 300%;
        height: 300%;
        background: rgba(255, 255, 255, 0.2);
        /* Semi-transparent white */
        border-radius: 50%;
        z-index: 0;
        transition: all 0.3s ease;
      }

      .glass-btn:hover:before {
        width: 1000%;
        height: 1000%;
      }

      .glass-btn span {
        position: relative;
        z-index: 1;
      }

      @keyframes glitter {
        0% {
          opacity: 1;
        }

        50% {
          opacity: 0.5;
        }

        100% {
          opacity: 1;
        }
      }

      .glass-btn:hover {
        background-color: rgba(255, 255, 255, 0.5);
        /* Adjust the opacity as needed */
        color: black;
      }

      .glass-btn:hover::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 10%, transparent 70%);
        animation: glitter 1s linear infinite;
        /* Adjust the duration of the glitter effect as needed */
        z-index: -1;
        /* Place the glitter effect behind the button */
        pointer-events: none;
        /* Ensure the glitter overlay doesn't interfere with button clicks */
      }

      .landing-content h1,
      .landing-content p {
        padding: 10px 20px;
        font-size: 16px;
      }

      #root {
        width: 100vh;
        height: 100vh;
        position: absolute;
        overflow: hidden;

      }

      .layer {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
      }

      .layer-1 {
        transform-origin: 66% 40%;
        background:
          repeating-conic-gradient(from 0deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 248, 176, 0.46) 3.96%, rgba(69, 168, 255, 0) 8.33%, rgba(69, 168, 255, 0) 8.33%) 69.5% 37.7% / 17.2% 17.2% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 248, 176, 1) 0%, rgba(69, 168, 255, 0) 47.22%) 74.1% 35.6% / 33.6% 36.6% no-repeat;
        animation: rotate 30s linear infinite;
        /* Applied the rotate animation to all layers */
      }

      .layer-2 {
        transform-origin: 66% 40%;
        background:
          radial-gradient(ellipse at 50% 50%, rgba(69, 168, 255, 0) 20%, #000000 29%) 77.4% 33.8% / 40% 40% no-repeat,
          repeating-conic-gradient(from 15deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 248, 176, 0.51) 2.64%, rgba(69, 168, 255, 0) 5.56%, rgba(69, 168, 255, 0) 5.56%) 69.5% 37.7% / 17.2% 17.2% no-repeat;
        animation: rotate 30s linear infinite;
        /* Applied the rotate animation to all layers */
      }

      .layer-3 {
        background:
          repeating-conic-gradient(from 355deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 198, 69, 0.26) 8.1%, rgba(69, 168, 255, 0) 16.67%, rgba(69, 168, 255, 0) 16.67%) 0 0 / 100% 100% no-repeat;
        animation: rotate 30s linear infinite;
        /* Applied the rotate animation to all layers */
      }

      .layer-4 {
        background:
          repeating-conic-gradient(from 355deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 198, 69, 0.26) 2.86%, rgba(69, 168, 255, 0) 5.88%, rgba(69, 168, 255, 0) 5.88%) 0% 0% / 100% 100% no-repeat;
        animation: rotate 30s linear infinite;
        /* Applied the rotate animation to all layers */
      }

      .layer-5 {
        background:
          repeating-conic-gradient(from 0deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 198, 69, 0.26) 6.62%, rgba(69, 168, 255, 0) 7.69%, rgba(69, 168, 255, 0) 7.69%) 0% 0% / 100% 100% no-repeat;
        animation: rotate 30s linear infinite;
        /* Applied the rotate animation to all layers */
      }

      .layer-6 {
        background:
          radial-gradient(ellipse at 50% 50%, rgba(255, 248, 176, 0.27) 0%, rgba(69, 168, 255, 0) 63.54%) 67% 39.3% / 10% 10% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(69, 168, 255, 0) 40.28%, rgba(255, 183, 163, 0.05) 52.43%, rgba(69, 168, 255, 0) 63.54%) 68% 38.6% / 15% 15% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 248, 176, 0.55) 0%, rgba(69, 168, 255, 0) 63.54%) 66.9% 39.3% / 5% 5% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 248, 176, 0.2) 0%, rgba(69, 168, 255, 0) 66.67%) 70.7% 36.5% / 30% 30% no-repeat,
          radial-gradient(ellipse at 50% 50%, #09090b 26%, rgba(69, 168, 255, 0) 26.4%) 0% 0% / 100% 100% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 212, 148, 0.04) 0%, rgba(69, 168, 255, 0) 69.79%) 0% 0% / 100% 100% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 240, 148, 0.11) 0%, rgba(69, 168, 255, 0) 52.43%) 0% 0% / 100% 100% no-repeat,
          radial-gradient(ellipse at 51% 49%, rgba(69, 168, 255, 0) 23.96%, #000000 40.63%) 0% 0% / 100% 100% no-repeat,
          repeating-conic-gradient(from 0deg at 50% 50%, rgba(255, 255, 255, 0) 0%, rgba(255, 239, 69, 0.14) 11.04%, rgba(69, 168, 255, 0) 20%, rgba(69, 168, 255, 0) 20%) 0% 0% / 100% 100% no-repeat,
          radial-gradient(ellipse at 52% 48%, rgba(69, 168, 255, 0) 23.96%, #09090b 34.03%) 0% 0% / 100% 100% no-repeat,
          radial-gradient(ellipse at 50% 50%, rgba(255, 185, 147, 0.29) 28%, rgba(69, 168, 255, 0) 30%) 0% 0% / 100% 100% no-repeat;
      }

      @keyframes rotate {
        from {
          transform: rotate(0deg);
        }

        to {
          transform: rotate(359deg);
        }
      }


      body {
        height: auto;
        background-color: black;
        margin: 0;
        padding: 0;
        color: white;
        font-family: Arial, sans-serif;
        overflow-y: scroll;
      }

      .container {
        position: relative;
        width: 100%;
        height: auto;
      }

      .celestial-body {
        position: absolute;
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 0 20px 5px rgba(255, 255, 255, 0.8);
      }

      .distance-meter {
        display: none;
        position: fixed;
        left: 10px;
        top: calc(50% + 10px);
        z-index: 1000;
        background-color: rgba(0, 0, 0, 0.5);
        padding: 5px 10px;
        border-radius: 5px;
      }

      .fact-container {
        /* Add fixed width */
        width: 300px;
        display: none;
        flex-direction: column;
        position: fixed;
        right: 10px;
        top: calc(50% + 10px);
        background-color: rgba(128, 128, 128, 0.7);
        padding: 10px;
        border-radius: 5px;
        text-align: center;
        z-index: 1000;
        border: 2px solid rgba(225, 225, 225, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
      }

      .fact-wrapper {
        padding: 15px; //* Add padding on all sides */
        width: 200px;
        height: auto;
        position: relative;
        background-color: transparent;
        border-radius: 10px;
        /* Add border radius to round the corners */
        flex-direction: column;
        font-size: 15px;
        justify-content: space-evenly;
      }

      .fact-container .arrow {
        position: absolute;
        font-size: 24px;
        cursor: pointer;
        color: white;
        z-index: 1000;
        padding: 7px;
        top: 80%;
        /* Center vertically */
        transform: translateY(-50%);
        /* Center vertically */
      }

      .left-arrow {
        left: 4px;
        top: 50%;
        /* Position at 50% from the top */
        transform: translateY(-50%);
        /* Center vertically */
      }

      .right-arrow {
        right: 4px;
        top: 50%;
        /* Position at 50% from the top */
        transform: translateY(-50%);
        /* Center vertically */
      }

      .left-arrow:hover,
      .right-arrow:hover {
        color: #595959;
      }

      .close-button {
        position: absolute;
        top: 5px;
        /* Adjust top position as needed */
        right: 10px;
        /* Adjust right position as needed */
        cursor: pointer;
        color: white;
        font-size: 20px;
        z-index: 1001;
        /* Ensure it's above the fact container */
      }

      .close-button:hover {
        color: gray;
        /* Change color on hover */
      }

      .fact-container .name {
        text-transform: uppercase;
        font-size: 50px;
        font-weight: bold;
      }

      .fact-container p {
        margin: 5px 0;
      }

      .marker-line {
        display: none;
        /* Initially hide the marker line */
        position: fixed;
        left: 0;
        top: 50%;
        width: 100%;
        height: 1px;
        background-color: red;
        z-index: 999;
      }

      /* Add a class to show the marker line when visualization is active */
      .show-marker .marker-line {
        display: block;
      }

      .celestial-body .name {
        position: absolute;
        top: calc(100% + 5px);
        left: 50%;
        transform: translateX(-50%);
        pointer-events: none;
        color: white;
        font-size: 20px;
        z-index: 2001;
      }

      .astronaut {
        display: none;
        /* Initially hide the astronaut */
        position: fixed;
        width: 50px;
        height: 50px;
        background-color: white;
        border-radius: 50%;
        cursor: pointer;
        z-index: 1000;
        left: 20px;
        top: calc(50% - 60px);
      }

      .astronaut-fact {
        position: fixed;
        width: auto;
        max-width: 200px;
        padding: 10px;
        color: gray;
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        /* Adjust position relative to the astronaut */
        left: 80px;
        /* Position to the right of the astronaut */
        top: calc(50% - 185px);
        /* Position slightly above the center */
      }

      .astronaut-fact::after {
        content: '';
        position: absolute;
        bottom: -20px;
        /* Shift the arrow to the bottom */
        left: -20px;
        /* Shift the arrow to the left */
        border-width: 10px;
        border-style: solid;
        border-color: transparent rgba(255, 255, 255, 0.9) transparent transparent;
        /* Arrow color */
        transform: rotate(-45deg);
        /* Rotate the arrow */
      }

      .close-icon {
        position: absolute;
        top: 5px;
        right: 5px;
        cursor: pointer;
        font-size: 20px;
        color: #999;
      }

      .close-icon:hover {
        color: #666666;
        /* Change color on hover */
      }

    </style>
  </head>

  <body>
    <div class="landing-content" id="landing-content">
      <h1>Welcome to AstraVerse</h1>
      <p>Explore our scrollable solar system</p>
      <button onclick="startExploring()" class="glass-btn">Start Exploring</button>
    </div>
    <div id="root">
      <div class="layer layer-1"></div>
      <div class="layer layer-2"></div>
      <div class="layer layer-3"></div>
      <div class="layer layer-4"></div>
      <div class="layer layer-5"></div>
      <div class="layer layer-6"></div>
    </div>
    <div class="container" style="display: none;">
      <!-- Celestial bodies will be added here by JavaScript -->
    </div>
    <div class="fact-container" style="display: none;">
      <div class="close-button">&#10006;</div>
      <div class="arrow left-arrow">&#10094;</div>
      <p class="name"></p>
      <p class="diameter"></p>
      <p class="distance"></p>
      <div class="fact-wrapper"></div>
      <div class="arrow right-arrow">&#10095;</div>
    </div>
    <div class="marker-line"></div>
    <div class="distance-meter">Distance: <span id="distance">0</span> km</div>
    <!-- Astronaut or spaceship element -->
    <div class="astronaut" id="astronaut"></div>
    <div class="fact-container astronaut-fact" style="display: none;">
      <div class="fact-wrapper">
        <p class="fact"></p>
        <div class="close-icon">×</div>
      </div>
    </div>

    <script>
      function startExploring() {
        document.getElementById('root').style.display = 'none'; // Hide the landing page
        document.getElementById('landing-content').style.display = 'none'; // Hide the landing content
        document.body.classList.add('show-marker'); // Add class to show the marker line
        document.querySelector('.container').style.display = 'block'; // Show the celestial bodies
        document.querySelector('.astronaut').style.display = 'block'; // Show the astronaut
      }
      const astronomicalUnit = 149597871; // 149,597,871 kilometers (1 AU)
      const scaleRatio = 300; // Each unit represents 300 times the corresponding distance in reality

      let debounceTimer;

      const celestialBodies = [{
          id: 'sun',
          color: 'yellow',
          diameter: 1392700, // 1.3927 million kilometres
          distance: 0, // Starting point for this model
          name: 'Sun',
          facts: [
            'The Sun is a star at the center of the Solar System.',
            'It is composed of hot plasma interwoven with magnetic fields.',
          ]
        },
        {
          id: 'mercury',
          color: 'gray',
          diameter: 4879.4, // 4,879.4 kilometres
          distance: 0.4, // AU Distance
          name: 'Mercury',
          facts: [
            'Mercury is the smallest planet in the Solar System and the closest to the Sun.',
            'It has a very thin atmosphere composed mainly of oxygen, sodium, hydrogen, helium, and potassium.'
          ]
        },
        {
          id: 'venus',
          color: 'orange',
          diameter: 12104, // 12,104 kilometers
          distance: 0.72, // AU Distance
          name: 'Venus',
          facts: [
            'Venus is often called the "Morning Star" or the "Evening Star".',
            'It has a thick atmosphere mainly composed of carbon dioxide with clouds of sulfuric acid.'
          ]
        },
        {
          id: 'earth',
          color: 'blue',
          diameter: 12742, // 12,742 kilometres
          distance: 1, // AU Distance
          name: 'Earth',
          facts: [
            'Earth is the third planet from the Sun and the only astronomical object known to harbor life.',
            'It has one natural satellite, the Moon, which plays a significant role in stabilizing its axial tilt.'
          ]
        },
        {
          id: 'moon',
          color: 'gray',
          diameter: 3475, // 3,475 kilometers
          distance: 1.00257, // 1 AU + 384,400 kilometres (0.00257 AU)
          name: 'Moon',
          facts: [
            'The Moon is Earth\'s only natural satellite.',
            'It is tidally locked to Earth, meaning the same side always faces Earth.'
          ]
        },
        {
          id: 'mars',
          color: 'red',
          diameter: 6779, // 6,779 kilometers
          distance: 1.5, // AU Distance
          name: 'Mars',
          facts: [
            'Mars is known as the "Red Planet" due to its reddish appearance.',
            'It has the tallest volcano and the deepest canyon in the Solar System, Olympus Mons and Valles Marineris respectively.'
          ]
        },
        {
          id: 'jupiter',
          color: 'tan',
          diameter: 142800, // 142,800 kilometres
          distance: 5.20, // AU Distance
          name: 'Jupiter',
          facts: [
            'Jupiter is the largest planet in the Solar System and has more than 75 moons.',
            'Its iconic Great Red Spot is a massive storm that has been raging for at least 400 years.'
          ]
        },
        {
          id: 'saturn',
          color: 'gold',
          diameter: 120536, // 120,536 kilometres
          distance: 9.5, // AU Distance
          name: 'Saturn',
          facts: [
            'Saturn is known for its prominent ring system, made up of ice particles and dust.',
            'It has the second-largest moon in the Solar System, Titan, which has a dense atmosphere and surface lakes of liquid methane.'
          ]
        },
        {
          id: 'uranus',
          color: 'lightblue',
          diameter: 50724, // 50,724 kilometres
          distance: 19.8, // AU Distance
          name: 'Uranus',
          facts: [
            'Uranus is unique among the planets because it rotates on its side.',
            'It was the first planet discovered with a telescope, by William Herschel in 1781.'
          ]
        },
        {
          id: 'neptune',
          color: 'blue',
          diameter: 49528, // 49,528 kilometers
          distance: 30, // AU Distance
          name: 'Neptune',
          facts: [
            'Neptune is the farthest planet from the Sun and is often referred to as an "Ice Giant".',
            'It was the first planet to be discovered through mathematical calculations, rather than direct observation.'
          ]
        }
      ];


      function generateAstronaut() {
        const astronaut = document.getElementById('astronaut');

        astronaut.addEventListener('click', function() {
          showRandomAstronautFact(); // Display random fact
        });
      }

      function showRandomAstronautFact() {
        const astronautFacts = [
          'Space is completely silent.',
          'The Sun contains 99.86% of the mass in the Solar System.',
          'The largest volcano in the Solar System is on Mars: Olympus Mons.',
          'A day on Venus is longer than a year on Venus.',
          'There are more stars in the universe than grains of sand on all the beaches on Earth.'
          // Add more facts as needed
        ];

        const randomAstronautFact = astronautFacts[Math.floor(Math.random() * astronautFacts.length)];
        const astronautFactContainer = document.querySelector('.astronaut-fact');
        const astronautFact = astronautFactContainer.querySelector('.fact');
        astronautFact.textContent = randomAstronautFact;
        astronautFactContainer.style.display = 'block';
      }

      document.addEventListener('DOMContentLoaded', function() {
        generateAstronaut(); // Generate astronaut
      });



      // Function to set the glow effect for each celestial body
      function setGlowColor(element, color) {
        element.style.boxShadow = `0 0 20px 10px ${color}`;
      }

      const factContainer = document.querySelector('.fact-container');
      const factWrapper = factContainer.querySelector('.fact-wrapper');
      factWrapper.style.backgroundColor = 'rgba(120, 120, 120, 0.7)'; // Set the background color dynamically
      const nameElement = factContainer.querySelector('.name');
      const diameterElement = factContainer.querySelector('.diameter');
      const distanceElement = factContainer.querySelector('.distance');
      const leftArrow = document.querySelector('.left-arrow');
      const rightArrow = document.querySelector('.right-arrow');
      const closeButton = document.querySelector('.close-button');

      closeButton.addEventListener('click', function() {
        factContainer.style.display = 'none';
      });

      // JavaScript to close the fact box when the cross icon is clicked
      const closeIcon = document.querySelector('.close-icon');
      const astronautFactContainer = document.querySelector('.astronaut-fact');

      closeIcon.addEventListener('click', function() {
        astronautFactContainer.style.display = 'none';
      });


      let currentBodyIndex = 0;
      let currentFactIndex = 0;

      function showFact(index) {
        const body = celestialBodies[currentBodyIndex];
        const facts = body.facts;
        nameElement.textContent = body.name;
        diameterElement.textContent = `Diameter: ${parseNumeriqueSpace(body.diameter)} km`;
        // Check if the current body is the Sun, then hide the distance
        if (body.id !== 'sun') {
          distanceElement.textContent = `Distance from Sun: ${parseNumeriqueSpace(Math.ceil(body.distance * astronomicalUnit))} km`;
        } else {
          distanceElement.textContent = ''; // Hide the distance for the Sun
        }
        factWrapper.textContent = facts[index];
        currentFactIndex = index;
      }

      leftArrow.addEventListener('click', function() {
        currentFactIndex = (currentFactIndex - 1 + celestialBodies[currentBodyIndex].facts.length) % celestialBodies[currentBodyIndex].facts.length;
        showFact(currentFactIndex); // Show the updated fact
        event.stopPropagation();
      });

      rightArrow.addEventListener('click', function() {
        currentFactIndex = (currentFactIndex + 1) % celestialBodies[currentBodyIndex].facts.length;
        showFact(currentFactIndex); // Show the updated fact
        event.stopPropagation();
      });

      celestialBodies.forEach(body => {
        const element = document.createElement('div');
        element.id = body.id;
        element.className = 'celestial-body';
        element.dataset.name = body.name; // Add dataset for name
        element.style.backgroundColor = body.color;

        // Set glow color to match the body's color
        setGlowColor(element, body.color);

        // Calculate size based on actual diameter and scale ratio
        const size = body.diameter / scaleRatio;

        // Calculate distance based on scale ratio
        const distance = (body.distance * astronomicalUnit) / scaleRatio;

        element.style.width = size + 'px';
        element.style.height = size + 'px';
        element.style.top = distance + 'px';
        element.style.left = 'calc(50% - ' + (size / 2) + 'px)'; // Adjust the left position to center the body
        document.querySelector('.container').appendChild(element);

        const nameElement = document.createElement('p');
        nameElement.className = 'name';
        nameElement.textContent = body.name;
        element.appendChild(nameElement);

        element.addEventListener('click', function() {
          currentBodyIndex = celestialBodies.findIndex(item => item.id === body.id); // Set current body index
          showFact(0); // Show the first fact when clicked
          factContainer.style.display = 'block'; // Show the fact container
        });

      });

      function parseNumeriqueSpace(number) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
      }

      const markerLine = document.querySelector('.marker-line');
      const sunPosition = celestialBodies[0].distance * astronomicalUnit / scaleRatio;
      const sunDistanceKm = celestialBodies[0].distance * astronomicalUnit;

      const lastBody = celestialBodies[celestialBodies.length - 1];
      const lastBodyDistance = (lastBody.distance * astronomicalUnit) / scaleRatio;
      const lastBodyDiameter = lastBody.diameter / scaleRatio;
      const bufferHeight = lastBodyDistance + lastBodyDiameter + 1000; // Adjust the buffer height as needed

      // Set the container height to include the buffer
      document.querySelector('.container').style.height = bufferHeight + 'px';

      factContainer.addEventListener('click', function(event) {
        // Prevent click events from propagating outside the container
        event.stopPropagation();
      });

      document.addEventListener('click', function(event) {
        if (!event.target.closest('.celestial-body') && event.target !== factContainer) {
          factContainer.style.display = 'none';
        }
      });

      window.addEventListener('scroll', function() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(function() {
          const scrollPosition = window.scrollY;
          const markerOffset = markerLine.getBoundingClientRect().top + window.scrollY - sunPosition;
          let distanceFromSunKm = (markerOffset > 0 ? markerOffset : 0) * scaleRatio + sunDistanceKm;

          if (markerOffset > celestialBodies[0].diameter / scaleRatio) {
            document.getElementById('distance').textContent = distanceFromSunKm.toLocaleString();
            document.querySelector('.distance-meter').style.display = 'block';
          } else {
            document.querySelector('.distance-meter').style.display = 'none';
          }
        }, 50); // Adjust the debounce delay as needed
      });

    </script>

  </body>

</html>
